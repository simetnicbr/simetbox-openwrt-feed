#!/bin/sh /etc/rc.common

# SIMET2-MA - SIMET2 Measurement Agent services
# Copyright (c) 2018 NIC.br
# Distributed under the GPLv2+

START=99
STOP=10
USE_PROCD=1

simet_config() {
	RC=0
	. /usr/lib/simet/simet_lib_config.sh || RC=$?
	if [ $RC -ne 0 ] || [ -z "$AGENT_ID_FILE" ] || [ -z "$AGENT_TOKEN_FILE" ] || \
		[ -z "$GEOLOC_CACHE" ] || [ -z "$SIMET_INETUP_SERVER" ] ; then
		echo "$0: required configuration missing, aborting..." >&2
		exit 1
	fi

	BOXID=$(get_mac_address.sh 2>/dev/null | tr A-F a-f | tr -d ': -') || true
	BOOTID=$(cat /proc/sys/kernel/random/boot_id) || true
}

simet_netconfig() {
	WANDEVS=
	. /lib/functions/network.sh && {
		network_find_wan WAN4 false \
			&& [ -n "$WAN4" ] && network_get_physdev WDEV4 "$WAN4" || :
		network_find_wan6 WAN6 false \
			&& [ -n "$WAN6" ] && network_get_physdev WDEV6 "$WAN6" || :
		# FIXME: monitor multiple in inetup
		[ -n "$WDEV4" ] && WANDEVS="$WDEV4"
		[ -z "$WANDEVS" ] && WANDEVS="$WDEV6"
	}
	[ -n "$SIMET_RUNSTATE_DIR" ] && {
		printf "%s" "$WANDEVS" > "$SIMET_RUNSTATE_DIR/inetup-wan-dev"
		chmod 0664 "$SIMET_RUNSTATE_DIR/inetup-wan-dev"
	}
}

boot() {
	simet_config

	# used for the geolocation cache and ephemeral tokens
	[ -n "$SIMET_RUNSTATE_DIR" ] && mkdir -m 02770 -p "$SIMET_RUNSTATE_DIR" && chgrp nicbr-simet "$SIMET_RUNSTATE_DIR"
	[ -n "$SIMET_LOCK_DIR" ] && mkdir -m 0770 -p "$SIMET_LOCK_DIR" && chgrp nicbr-simet "$SIMET_LOCK_DIR"
	[ -n "$SIMET_PUBRUNSTATE_DIR" ] && \
		mkdir -m 0770 -p "$SIMET_PUBRUNSTATE_DIR" && \
		chgrp nicbr-simet "$SIMET_PUBRUNSTATE_DIR" && \
		chmod 0775 "$SIMET_PUBRUNSTATE_DIR"
	find "$AGENT_ID_FILE" -type f \! -perm -0644 -exec chmod +r {} \; 2>/dev/null
	find "$AGENT_TOKEN_FILE" -type f \! -perm -0644 -exec chmod +r {} \; 2>/dev/null
	find "$AGENT_VIEW_CREDENTIALS_FILE" -type f \! -perm -0644 -exec chmod +r {} \; 2>/dev/null

	# restoring config backups from other units is a problem we must check for on boot
	simet_create_vlabel.sh >/dev/null 2>&1 || :

	# warning: try to keep RAM load down for 32MiB devices!
	( simet_register_ma.sh <&- 2>&- >&- && {
		simet_geolocation.sh <&- 2>&- >&- || true
		( simetbox_lmap-fetch-schedule.sh \
			&& chown -h nicbr-simet:nicbr-simet "$LMAP_SCHEDULE_FILE" || true
		) <&- 2>/dev/null >/dev/null &
	} ) <&- 2>&- >&- &
	start "$@"
}

start_service() {
	simet_config
	simet_netconfig

	procd_open_instance simet-inetuptime
	procd_set_param file "$AGENT_ID_FILE" "$AGENT_TOKEN_FILE" /usr/lib/simet/simet-ma.conf /etc/simet/simet-ma.conf /usr/lib/simet/conf.d/*
	procd_set_param user nicbr-simet
	procd_set_param pidfile /var/run/simet-inetupc.pid
	procd_set_param respawn 180 5 10
	procd_set_param stderr 1
	procd_set_param reload_signal HUP
	procd_set_param command /usr/bin/inetupc -M "${LMAP_TASK_NAME_PREFIX}inetconn-state"
	[ -n "$AGENT_TOKEN_FILE" ] && procd_append_param command -j "$AGENT_TOKEN_FILE"
	[ -n "$AGENT_ID_FILE" ] && procd_append_param command -d "$AGENT_ID_FILE"
	[ -n "$BOOTID" ] && procd_append_param command -b "$BOOTID"
	[ -n "$BOXID" ] && procd_append_param command -m "$BOXID"
	procd_append_param command -i "$SIMET_RUNSTATE_DIR/inetup-wan-dev"
	procd_append_param command "$SIMET_INETUP_SERVER"
	procd_close_instance
}

reload_service() {
	simet_netconfig
	procd_send_signal simet-ma '*' HUP || killall -HUP inetupc
}
